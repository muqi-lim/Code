[main]
# 多线程，请跟进cpu核心设置，可以输入数字
# 如果不清楚电脑多少核心，可以输入'min','mid','max'
# 其中，min为单线程；mid为电脑核心的一半；max为满负荷运行
# 放空或0则默认为满负荷运行
process = max

#支持处理MRO MRS两种类型，设置为 all 则两种类型的MR数据均处理
parse_type = all

# 支持直接读取 tar.gz 文档
# 设置为 'gz' 则处理tar.gz
# 设置为 'xml'  则处理xml文档
# 不填则自动判断文件格式
file_type = gz

#MR原始数据存放目录
# source_path = C:\Users\lxute\Desktop\工作临时文件夹\mrs
source_path = C:\Users\lxute\Desktop\工作临时文件夹\新建文件夹 (6)

#MR解码结果存放目录
target_path = D:\test\output
#target_path = C:\Users\lxute\Desktop\工作临时文件夹\mrs

#汇总类型可以为 'hour','ecid'
#设置为 hour 时，会按每个小时进行汇总，每小时会出一条数据
#设置为 id 时，则会按照 ECID 进行汇总，每 ECID 会出一条数据
#如果两者都需要，则设置为 'hour','ecid'
gather_type = ecid

#定时功能,设置为 1 则激活，设置为 0 或 空 则不激活
#当激活定时功能时，会默认读取 source_path\昨天（格式为 yyyymmdd ) 下的文件，解码结果则存放在local_path\昨天（格式为 yyymmdd) 下
timing =


[MRS]
#处理MRsheet，如果只需要MR中的某个sheet，则可以在这里设置
mrs_parse_sheet = MR.RSRP

#例外，因MR文件全部解码的话会比较慢且耗费内存，而有些sheet并不需要用到，则可以在这里设置不解码
mrs_exception_sheet = MR.RIPPRB

[MRO]
# MRO转换成RSRP基准点，目前支持 140 141 两个门限值
mro_rsrp_standard = 141

# 需要生成的mro解码结果
# 目前支持 mro_main、mro_ecid、mro_ecid_hour、mro_rsrp
# 处理多张表用 ， 隔开
mro_parse_sheet = mro_rsrp

#重叠覆盖率门限
#门限1
overlap_db_1 = 3
overlap_ncell_rsrp_1 = -113
#门限2
overlap_db_2 = 6
overlap_ncell_rsrp_2 = -113

# MRO解码MR覆盖率门限
mr_lap = -110


[filter]
# 文件过滤器
# 如果 active_filter 设置为 1，则激活下面过滤器
# 如果 active_filter 设置为 0 或 空，则不激活过滤器
# 当激活过滤器后，符合过滤器条件的原始文件会被解压到硬盘，如果全网级解码的话，并不需要原始文件的，请留意关闭此功能
# filter_type 可以设置为 mro或 mrs , 都要的话，则设置为 mro,mrs 或 空
# filter_id 可以设置为需要解码的ENBID，多个间使用 , 隔开
# filter_hour 可以设置需要解码的时段（小时），多个时段使用 , 隔开（时段需使用两位数，如提取1:00时段的，需填 01）
active_filter = 0
filter_type = mro
filter_id = 659712,659713
filter_hour = 12





